name: Build and deploy Next.js app to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APPLICATION_PUBLISH_PROFILE: ${{ secrets.APP_PUBLISH_PROFILE }}
  WEBAPP_NAME: "rag-agent"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código fuente
      - uses: actions/checkout@v4

      # Paso 2: Configurar la versión de Node.js
      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # Paso 3: Cargar las variables de entorno necesarias
      - name: Set environment variables
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> $GITHUB_ENV

      # Paso 4: Crear el archivo .env (opcional pero recomendado)
      - name: Create .env file
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env

      # Paso 5: Instalar dependencias y construir la aplicación
      - name: Install and build
        run: |
          npm install
          npm run build

      # Paso 6: Organizar los archivos estáticos y la estructura para el despliegue
      - name: Organize files for deployment
        run: |
          # Crear las carpetas necesarias para la estructura standalone
          mkdir -p build/standalone/.next/static
          mkdir -p build/standalone/public
          # Copiar archivos estáticos generados
          cp -r ./build/.next/static ./build/standalone/.next/static
          # Copiar archivos de la carpeta public si existen
          if [ -d "./public" ]; then
            cp -r ./public ./build/standalone/public
          fi
          # Copiar el server.js
          cp ./server.js ./build/standalone/

      # Paso 7: Comprimir la estructura para el despliegue
      - name: Package application
        run: |
          zip -r app.zip build/standalone/*

      # Paso 8: Desplegar la aplicación a Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          slot-name: "Production"
          publish-profile: ${{ env.APPLICATION_PUBLISH_PROFILE }}
          package: app.zip
